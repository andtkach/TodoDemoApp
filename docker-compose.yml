version: '3.4'

services:

  todo-app:
    image: andreytkach/demo-todo-app
    container_name: todo-app
    hostname: todo-app
    links:
      - todo-api
      - todo-auth
    depends_on:
      - todo-api
      - todo-auth
    ports:
      - "8088:80"
    networks:
      - todonet

  todo-bff:
    image: andreytkach/demo-todo-bff
    container_name: todo-bff
    hostname: todo-bff
    depends_on:
      - todo-app
      - todo-api
      - todo-auth
    ports:
      - "8091:80"
    networks:
      - todonet

  todo-api:
    image: andreytkach/demo-todo-api
    container_name: todo-api
    hostname: todo-api
    depends_on:
      - todo-data-db
      - todo-data-cache
      - todo-auth-db
    ports:
      - "8080:8080"
      - "8081:8081"
    networks:
      - todonet
      
  todo-auth:
    image: andreytkach/demo-todo-auth
    container_name: todo-auth
    hostname: todo-auth
    environment:
      MONGODB_URI: mongodb://admin:password@todo-auth-db:27017
      JWT_SECRET: 44B3703534634154A02682BCD2B23CE9A6DC304957B34BB3A6A1EA17F020C2A3
    depends_on:
      - todo-data-db
    ports:
      - '3031:8080'
    networks:
      - todonet

  todo-data-db:
    image: postgres:latest
    container_name: todo-data-db
    environment:
      - POSTGRES_DB=tasksdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./containers-data/data-postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - todonet

  todo-data-cache:
    image: redis:latest
    container_name: todo-data-cache
    restart: always
    ports:
      - '6379:6379'
    networks:
      - todonet
  
  todo-auth-db:
    container_name: todo-auth-db
    image: mongo:latest
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - 27017:27017
    volumes:
      - ./containers-data/data-mongo:/data/db
    networks:
      - todonet
      
  todo-ctrl:
    container_name: todo-ctrl
    image: andreytkach/demo-todo-ctrl
    networks:
      - todonet
    command: ["sleep","infinity"]
      
networks:
  todonet:
    name: todonet
    driver: bridge